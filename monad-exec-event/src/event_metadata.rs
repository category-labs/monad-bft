// DO NOT EDIT THIS FILE! If you need changes, change the code generator
// instead. This file was generated by running the following command:
//
//    ../../monad-cxx/monad-execution/libs/event/src/python/cg-events rust
//    -p .

use crate::event_types::monad_event_type;

#[derive(Debug)]
pub struct EventMetadata {
    pub event_type: monad_event_type,
    pub c_name: &'static str,
    pub description: &'static str,
}

pub const EVENT_METADATA: [EventMetadata; 16] = [
    EventMetadata {
        event_type: monad_event_type::NONE,
        c_name: "NONE",
        description: "reserved code so that 0 remains invalid",
    },
    EventMetadata {
        event_type: monad_event_type::QUEUE_INIT,
        c_name: "QUEUE_INIT",
        description: "Posted when a recorder queue is enabled after being reset",
    },
    EventMetadata {
        event_type: monad_event_type::THREAD_CREATE,
        c_name: "THREAD_CREATE",
        description: "Sent when a new thread starts recording data",
    },
    EventMetadata {
        event_type: monad_event_type::THREAD_EXIT,
        c_name: "THREAD_EXIT",
        description: "Sent immediately before a thread exits",
    },
    EventMetadata {
        event_type: monad_event_type::HEARTBEAT,
        c_name: "HEARTBEAT",
        description: "Periodic heartbeat emitted by the event server",
    },
    EventMetadata {
        event_type: monad_event_type::THR_PAGE_ALLOC,
        c_name: "THR_PAGE_ALLOC",
        description: "Event recorder pulled a new page from the pool free list",
    },
    EventMetadata {
        event_type: monad_event_type::TEST_COUNT_64,
        c_name: "TEST_COUNT_64",
        description: "A special event emitted only by the test suite",
    },
    EventMetadata {
        event_type: monad_event_type::BLOCK_START,
        c_name: "BLOCK_START",
        description: "Started execution of a proposed block",
    },
    EventMetadata {
        event_type: monad_event_type::BLOCK_END,
        c_name: "BLOCK_END",
        description:
            "Proposed block with this flow ID has completed execution (may not be finalized)",
    },
    EventMetadata {
        event_type: monad_event_type::BLOCK_FINALIZE,
        c_name: "BLOCK_FINALIZE",
        description: "Block with this flow ID is commited as the canonical block on the chain",
    },
    EventMetadata {
        event_type: monad_event_type::TXN_START,
        c_name: "TXN_START",
        description: "Started execution of new transaction",
    },
    EventMetadata {
        event_type: monad_event_type::TXN_LOG,
        c_name: "TXN_LOG",
        description: "Transaction emitted a log during speculative execution",
    },
    EventMetadata {
        event_type: monad_event_type::TXN_RESTART,
        c_name: "TXN_RESTART",
        description: "Transaction restarting after speculative execution could not be merged",
    },
    EventMetadata {
        event_type: monad_event_type::TXN_END,
        c_name: "TXN_END",
        description: "Transaction execution finished (committed to proposed block",
    },
    EventMetadata {
        event_type: monad_event_type::WR_ACCT_STATE_BALANCE,
        c_name: "WR_ACCT_STATE_BALANCE",
        description: "Account balance updated by transaction commit",
    },
    EventMetadata {
        event_type: monad_event_type::WR_ACCT_STATE_STORAGE,
        c_name: "WR_ACCT_STATE_STORAGE",
        description: "Account storage updated by transaction commit",
    },
];

/// libmonad_event_queue_ffi.so expects this symbol to be defined
#[allow(non_upper_case_globals)]
#[no_mangle]
pub static g_monad_event_metadata_hash: [u8; 32] = [
    0x90, 0xae, 0x97, 0x6f, 0xd9, 0xbb, 0x84, 0x23, 0x1e, 0x51, 0xd1, 0x57, 0xfb, 0x64, 0x71, 0xb5,
    0xc6, 0x92, 0x2a, 0x7, 0xff, 0xa0, 0xaa, 0x0, 0x9d, 0x9b, 0xa2, 0xa1, 0x3b, 0xcc, 0xdb, 0x27,
];
