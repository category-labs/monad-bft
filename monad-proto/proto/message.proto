syntax = "proto3";

package monad_proto.message;

import "basic.proto";
import "block.proto";
import "signing.proto";
import "state_root_hash.proto";
import "timeout.proto";
import "voting.proto";


message ProtoVoteMessage {
  monad_proto.voting.ProtoVote vote = 1;
  monad_proto.signing.ProtoSignature sig = 2;
}

message ProtoRequestBlockSyncMessage {
  monad_proto.basic.ProtoBlockId block_id = 1;
}

message ProtoBlockSyncMessage {
  oneof OneofMessage {
    monad_proto.block.ProtoFullBlock block_found = 1;
    monad_proto.basic.ProtoBlockId not_available = 2;
  }
}

message ProtoTimeoutMessage {
  monad_proto.timeout.ProtoTimeout timeout = 1;
  monad_proto.signing.ProtoSignature sig = 2;
}

message ProtoProposalMessage {
  monad_proto.block.ProtoBlock block = 1;
  monad_proto.block.ProtoPayload payload = 2;
  optional monad_proto.timeout.ProtoTimeoutCertificate last_round_tc = 3;
}

message ProtoUnverifiedConsensusMessage {
  oneof OneofMessage {
    ProtoProposalMessage proposal = 1;
    ProtoTimeoutMessage timeout = 2;
    ProtoVoteMessage vote = 3;
  }
  string version = 4;
  monad_proto.signing.ProtoSignature author_signature = 6;
}

message ProtoPeerStateRootMessage {
  monad_proto.basic.ProtoNodeId peer = 1;
  monad_proto.state_root_hash.ProtoStateRootHashInfo info = 2;
  monad_proto.signing.ProtoSignature sig = 3;
}

message ProtoForwardedTx {
  repeated bytes tx = 1;
}

message ProtoStateSyncRequest {
  uint64 prefix = 1;
  uint32 prefix_bytes = 2;
  uint64 target = 3;
  uint64 from = 4;
  uint64 until = 5;
  uint64 old_target = 6;
}

message ProtoStateSyncUpsert {
  bool code = 1;
  bytes key = 2;
  bytes value = 3;
}

message ProtoStateSyncResponse {
  ProtoStateSyncRequest request = 1;
  repeated ProtoStateSyncUpsert upserts = 2;
  uint64 n = 3;
}

message ProtoStateSyncNetworkMessage {
  oneof OneofMessage {
    ProtoStateSyncRequest request = 1;
    ProtoStateSyncResponse response = 2;
  }
}

message ProtoMonadMessage {
  oneof OneofMessage {
    ProtoUnverifiedConsensusMessage consensus = 1;
    ProtoRequestBlockSyncMessage block_sync_request = 2;
    ProtoBlockSyncMessage block_sync_response = 3;
    ProtoPeerStateRootMessage peer_state_root = 4;
    ProtoForwardedTx forwarded_tx = 5;
    ProtoStateSyncNetworkMessage state_sync_message = 6;
  }
}
