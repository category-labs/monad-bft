[package]
name = "monad-node"
description = "Monad consensus node"
version = "0.1.0"
edition = "2021"

[[bin]]
name = "monad-node"

[dependencies]
monad-async-state-verify = { path = "../monad-async-state-verify" }
monad-bls = { path = "../monad-bls" }
monad-control-panel = { path = "../monad-control-panel" }
monad-consensus-state = { path = "../monad-consensus-state" }
monad-consensus-types = { path = "../monad-consensus-types" }
monad-crypto = { path = "../monad-crypto" }
monad-eth-block-policy = { path = "../monad-eth-block-policy" }
monad-eth-block-validator = { path = "../monad-eth-block-validator" }
monad-eth-txpool = { path = "../monad-eth-txpool" }
monad-executor = { path = "../monad-executor" }
monad-executor-glue = { path = "../monad-executor-glue" }
monad-gossip = { path = "../monad-gossip" }
monad-ipc = { path = "../monad-ipc" }
monad-keystore = { path = "../monad-keystore" }
monad-ledger = { path = "../monad-ledger" }
monad-node-config = { path = "../monad-node-config" }
monad-quic = { path = "../monad-quic" }
monad-raptorcast = { path = "../monad-raptorcast" }
monad-secp = { path = "../monad-secp" }
monad-state = { path = "../monad-state" }
monad-statesync = { path = "../monad-statesync" }
monad-types = { path = "../monad-types" }
monad-updaters = { path = "../monad-updaters", features = ["monad-triedb", "tokio"] }
monad-validator = { path = "../monad-validator" }
monad-wal = { path = "../monad-wal" }
monad-triedb-cache = { path = "../monad-triedb-cache" }
monad-triedb-utils = { path = "../monad-triedb-utils" }

bytes = { workspace = true }
chrono = { workspace = true }
clap = { workspace = true, features = ["derive"] }
futures-util = { workspace = true }
hex = { workspace = true }
opentelemetry = { workspace = true }
opentelemetry_sdk = { workspace = true, features = ["rt-tokio"] }
opentelemetry-otlp = { workspace = true, features = ["metrics"] }
opentelemetry-semantic-conventions = { workspace = true }
rayon = { workspace = true }
thiserror = { workspace = true }
tokio = { workspace = true, features = ["rt-multi-thread", "signal"] }
toml = { workspace = true }
tracing = { workspace = true, features = ["log"] }
tracing-opentelemetry = { workspace = true }
tracing-subscriber = { workspace = true, features = ["env-filter", "json"] }
